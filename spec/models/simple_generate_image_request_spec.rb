=begin
#Venice.ai API

#The Venice.ai API.

OpenAPI spec version: 20250521.233203

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.68
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::SimpleGenerateImageRequest
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SimpleGenerateImageRequest' do
  before do
    # run before each test
    @instance = SwaggerClient::SimpleGenerateImageRequest.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SimpleGenerateImageRequest' do
    it 'should create an instance of SimpleGenerateImageRequest' do
      expect(@instance).to be_instance_of(SwaggerClient::SimpleGenerateImageRequest)
    end
  end
  describe 'test attribute "background"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["transparent", "opaque", "auto"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.background = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "model"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "moderation"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["low", "auto"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.moderation = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "n"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "output_compression"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "output_format"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["jpeg", "png", "webp"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.output_format = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "prompt"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "quality"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["auto", "high", "medium", "low", "hd", "standard"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.quality = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "response_format"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["b64_json", "url"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.response_format = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "size"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["auto", "256x256", "512x512", "1024x1024", "1536x1024", "1024x1536", "1792x1024", "1024x1792"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.size = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "style"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["vivid", "natural"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.style = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "user"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
